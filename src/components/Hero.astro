---
import type { HeroProps } from "@types";
type Props = HeroProps;

const { name, specialty, summary, email } = Astro.props;
// Placeholder for resume link
const resumeUrl = "#";
---

<section class="w-full min-h-screen flex flex-col justify-center items-center text-white" id="hero">
  <!-- Typing animation -->
  <h1 class="text-6xl md:text-7xl font-bold font-serif mb-6 text-center">
    <span id="typed-text"></span><span class="blinking-cursor">|</span>
  </h1>

  <!-- Animated content container -->
  <div class="flex flex-col items-center opacity-0 animate-fade-in delay-700">
    <!-- Specialty -->
    <p class="mb-6 font-serif text-3xl leading-snug font-bold tracking-tighter text-primary text-center sm:text-4xl md:text-5xl">
      {specialty}
    </p>

    <!-- Summary -->
    <p class="mb-10 text-base font-normal text-neutral text-center md:text-lg max-w-2xl">
      {summary}
    </p>

    <!-- Buttons -->
    <div class="flex gap-4">
      <a
        class="inline-block rounded-full bg-primary px-6 py-3 text-sm font-medium text-white hover:bg-primary/90 transition"
        href={`mailto:${email}`}
      >
        Get in Touch
      </a>

      <a
        class="inline-block rounded-full border border-white px-6 py-3 text-sm font-medium text-white hover:bg-white hover:text-gray-900 transition"
        href={resumeUrl}
        download
      >
        My Resume
      </a>
    </div>
  </div>
</section>

<script type="module">
  const typedText = document.getElementById("typed-text");
  const cursor = document.querySelector(".blinking-cursor");
  const textParts = ["howdy, ", "Seth", " here."];
  let part = 0;
  let subIndex = 0;

  function type() {
    if (part < textParts.length) {
      typedText.innerHTML =
        textParts
          .slice(0, part)
          .map((t, i) =>
            i === 1
              ? `<span class="glow-text text-7xl md:text-8xl font-extrabold">${t}</span>`
              : t
          )
          .join("") + textParts[part].slice(0, subIndex);
      subIndex++;
      if (subIndex > textParts[part].length) {
        subIndex = 0;
        part++;
      }
      setTimeout(type, 120);
    } else {
      cursor.classList.add("blink");
      document.querySelector('.animate-fade-in').classList.add('opacity-100');
    }
  }

  type();
</script>

<style>
  .blinking-cursor {
    display: inline-block;
    width: 1ch;
    animation: blink 1s step-start infinite;
  }

  @keyframes blink {
    50% { opacity: 0; }
  }

  /* Fade-in for the rest of the hero content */
  .animate-fade-in {
    transition: opacity 1s ease-in-out;
  }

  /* Glow effect for "Seth" */
  .glow-text {
    color: #fff;
    position: relative;
    display: inline-block;
    text-shadow:
      0 0 8px #fff,
      0 0 16px #8b5cf6,
      0 0 24px #8b5cf6,
      0 0 32px #8b5cf6;
    animation: glow-shine 2.5s ease-in-out infinite;
  }

  @keyframes glow-shine {
    0%, 100% {
      text-shadow:
        0 0 6px #fff,
        0 0 12px #8b5cf6,
        0 0 18px #8b5cf6,
        0 0 24px #8b5cf6;
    }
    50% {
      text-shadow:
        0 0 10px #fff,
        0 0 20px #a78bfa,
        0 0 30px #a78bfa,
        0 0 40px #a78bfa;
    }
  }
</style>

