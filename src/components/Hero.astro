---
import type { HeroProps } from "@types";
type Props = HeroProps;

const { name, specialty, summary, email} = Astro.props;
// Placeholder for resume link
const resumeUrl = "/Seth_Williams_Resume.pdf";
---

<section class="w-full min-h-screen flex flex-col justify-center items-center text-white" id="hero">
  <!-- Typing animation -->
  <h1 class="text-6xl md:text-7xl font-bold font-serif mb-6 text-center">
    <span id="typed-text"></span><span class="blinking-cursor">|</span>
  </h1>

  <!-- Animated content container -->
  <div class="flex flex-col items-center opacity-0 animate-fade-in delay-700">
    <!-- Specialty -->
    <p class="mb-6 font-serif text-3xl leading-snug font-bold tracking-tighter text-primary text-center sm:text-4xl md:text-5xl">
      {specialty}
    </p>

    <!-- Summary -->
    <p class="mb-10 text-base font-normal text-neutral text-center md:text-lg max-w-2xl">
      {summary}
    </p>

    <!-- Buttons -->
    <div class="flex gap-4">
      <a
        class="inline-block rounded-full bg-primary px-6 py-3 text-sm font-medium text-white hover:bg-primary/90 transition"
        href={`mailto:${email}`}
      >
        Get in Touch
      </a>

      <a
        class="inline-block rounded-full border border-white px-6 py-3 text-sm font-medium text-white hover:bg-white hover:text-gray-900 transition"
        href={resumeUrl}
        download
      >
        My Resume
      </a>
    </div>
  </div>
</section>

<script type="module">
  const typedText = document.getElementById("typed-text");
  const cursor = document.querySelector(".blinking-cursor");
  const fullText = "howdy, Seth here.";
  let index = 0;

  function type() {
    if (index < fullText.length) {
      typedText.textContent += fullText[index];
      index++;
      setTimeout(type, 120);
    } else {
      cursor.classList.add("blink");
      document.querySelector('.animate-fade-in').classList.add('opacity-100');

      // Apply glow to "Seth" after typing
      typedText.innerHTML = typedText.textContent.replace(
        "Seth",
        '<span class="glow-text">Seth</span>'
      );
    }
  }

  typedText.textContent = "";
  type();
</script>

<style>
  .blinking-cursor {
    display: inline-block;
    width: 1ch;
    animation: blink 1s step-start infinite;
  }

  @keyframes blink {
    50% { opacity: 0; }
  }

  .animate-fade-in {
    transition: opacity 1s ease-in-out;
  }

  /* Glow + subtle shine/pulse effect */
  .glow-text {
    display: inline-block;
    font-weight: bold;
    background: linear-gradient(90deg, #facc15, #fff, #facc15);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% auto;
    animation: shine 2s linear infinite, pulse 1.5s ease-in-out infinite;
  }

  @keyframes shine {
    0% { background-position: 0% center; }
    100% { background-position: 200% center; }
  }

  @keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.08); }
  }
</style>


